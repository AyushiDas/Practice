---
replicaCount: 2
image:
  repository: icr.io/rls-release/mysql-protocol-adapter
  pullPolicy: IfNotPresent
  tag: ""
imagePullSecrets:
  - name: rls-dockerconfigsecret
nameOverride: platform-sql-connector
fullnameOverride: platform-sql-connector
extraEnvs:
  - name: AUTH_API_DOMAIN
    valueFrom:
      secretKeyRef:
        name: rls-doppler-secret
        key: MYSQL_AUTH_API_DOMAIN
  - name: CONGADB_PORT
    value: "3306"
  - name: EXECUTOR_GROUP_SIZE
    value: "100"
  - name: TCP_KEEPIDLE_SECONDS
    value: "300"
  - name: OTEL_AGENT_HOST
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP
  - name: KEYFILE_CA_CRT_PATH
    value: usr/share/path/certs/congacloud-secret.ca-bundle
  - name: KEYFILE_CRT_PATH
    value: usr/share/path/certs/congacloud-secret.crt
  - name: KEYFILE_PATH
    value: usr/share/path/certs/pvt.key
  - name: SUPERSET_AUTH_ENABLED
    value: "false"
  - name: SSH_HANDLER_HANDSHAKE_TIMEOUT_MILLIS
    value: "120000"
secretMounts:
  - secretName: congacloud-secret
    path: /usr/share/path/certs/congacloud-secret.ca-bundle
    subPath: secret.ca-bundle
    key: secret.ca-bundle
  - secretName: congacloud-secret
    path: /usr/share/path/certs/congacloud-secret.crt
    subPath: secret.crt
    key: secret.crt
  - secretName: congacloud-secret
    path: /usr/share/path/certs/pvt.key
    subPath: secret.key
    key: secret.key
configMaps: []
serviceAccount:
  create: true
  annotations: {}
  name: ""
podAnnotations: {}
otelLabels:
  deployment.environment: ""
  service.namespace: platform
  product: platform 
podSecurityContext:
  fsGroup: 1000
securityContext:
  runAsUser: 1000
  runAsGroup: 2000
containerPorts:
  - name: http3306
    containerPort: 3306
    protocol: TCP
service:
  enabled: false
  type: LoadBalancer
  ports:
    - port: 3306
      targetPort: http3306
      protocol: TCP
      name: http3306
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes:
      stickiness.enabled=true,stickiness.type=source_ip,preserve_client_ip.enabled=true
resources:
  limits:
    memory: 2048Mi
  requests:
    cpu: 500m
    memory: 2048Mi
readinessProbe:
  tcpSocket:
    port: 3306
  initialDelaySeconds: 15
  periodSeconds: 10
livenessProbe:
  tcpSocket:
    port: 3306
  initialDelaySeconds: 15
  periodSeconds: 10
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 20
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
nodeSelector:
  type: mysqlproxy
nodeAffinity:
  enabled: true
  spotLabels:
    key: workload
    value:
      - spot
  ondemandLabels:
    key: workload
    value:
      - ondemand
tolerations: []
affinity: {}
lifecycle:
  preStop:
    exec:
      command:
        - /bin/sh
        - -c
        - sleep 12
terminationGracePeriodSeconds: "300"
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
rbacRole:
  enabled: true
  resources:
    - secrets
  resourceNames:
    - rls-doppler-secret
    - rls-dockerconfigsecret
    - congacloud-secret
